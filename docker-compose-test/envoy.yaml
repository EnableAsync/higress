admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      # httpbin
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          scheme_header_transformation:
            scheme_to_overwrite: https
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              # - match:
              #     prefix: "/"
              #   route:
              #     cluster: httpbin
              - match:
                  prefix: "/"
                route:
                  cluster: llm
                  timeout: 300s

          http_filters:
          # ai-cache
          - name: ai-cache
            typed_config:
              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
              type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              value:
                config:
                  name: ai-cache
                  vm_config:
                    runtime: envoy.wasm.runtime.v8
                    code:
                      local:
                        filename: /etc/envoy/ai-cache.wasm
                  configuration:
                    "@type": "type.googleapis.com/google.protobuf.StringValue"
                    value: |
                      {
                        "embeddingProvider": {
                          "TextEmbeddingProviderType": "dashscope",
                          "ServiceName": "text-embedding-v2",
                          "DashScopeKey": "sk-your-key",
                          "DashScopeServiceName": "dashscope"
                        },
                        "vectorBaseProvider": {
                          "vectorStoreProviderType": "chroma",
                          "ChromaServiceName": "chroma",
                          "ChromaCollectionID": "0294deb1-8ef5-4582-b21c-75f23093db2c"
                        },
                        "cacheKeyFrom": {
                          "requestBody": ""
                        },
                        "cacheValueFrom": {
                          "responseBody": ""
                        },
                        "cacheStreamValueFrom": {
                          "responseBody": ""
                        },
                        "returnResponseTemplate": "",
                        "returnTestResponseTemplate": "",
                        "ReturnStreamResponseTemplate": "",
                        "redis": {
                          "serviceName": "redis_cluster",
                          "timeout": 2000
                        }
                      }
          # 上面的配置中 redis 的配置名字是 redis，而不是 golang tag 中的 redisConfig

          # llm-proxy
          - name: llm-proxy
            typed_config:
              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
              type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              value:
                config:
                  name: llm
                  vm_config:
                    runtime: envoy.wasm.runtime.v8
                    code:
                      local:
                        filename: /etc/envoy/ai-proxy.wasm
                  configuration:
                    "@type": "type.googleapis.com/google.protobuf.StringValue"
                    value: | # 插件配置
                      {
                        "provider": {
                          "type": "openai",                                
                          "apiTokens": [
                            "YOUR_API_TOKEN"
                          ],
                          "openaiCustomUrl": "172.17.0.1:8000/v1/chat/completions"
                        }
                      }


          - name: envoy.filters.http.router
      
  clusters:
  - name: httpbin
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: httpbin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: httpbin
                port_value: 80
  # - name: redis_cluster
  #   connect_timeout: 30s
  #   type: STRICT_DNS
  #   lb_policy: ROUND_ROBIN
  #   load_assignment:
  #     cluster_name: redis
  #     endpoints:
  #       - lb_endpoints:
  #           - endpoint:
  #               address:
  #                 socket_address:
  #                   address: 172.17.0.1
  #                   port_value: 6379
  - name: outbound|6379||redis_cluster
    connect_timeout: 1s
    type: strict_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: outbound|6379||redis_cluster
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 172.17.0.1
                    port_value: 6379
    typed_extension_protocol_options:
      envoy.filters.network.redis_proxy:
        "@type": type.googleapis.com/envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions
  # chroma
  - name: outbound|8001||chroma.dns
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: outbound|8001||chroma.dns
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 172.17.0.1 # 本地 API 服务地址，这里是 docker0
                    port_value: 8001
  # llm
  - name: llm
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: llm
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 172.17.0.1 # 本地 API 服务地址，这里是 docker0
                    port_value: 8000
  # dashvector
  - name: outbound|443||dashvector.dns
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: outbound|443||dashvector.dns
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: vrs-cn-0dw3vnaqs0002z.dashvector.cn-hangzhou.aliyuncs.com
                    port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        "sni": "vrs-cn-0dw3vnaqs0002z.dashvector.cn-hangzhou.aliyuncs.com"
  # dashscope
  - name: outbound|443||dashscope.dns
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: outbound|443||dashscope.dns
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: dashscope.aliyuncs.com
                    port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        "sni": "dashscope.aliyuncs.com"